---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, thumbnail, links, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}

			hr {
				height: 1px;
				color: rgb(229, 231, 235);
				background: rgb(229, 231, 235);
				font-size: 0;
				border: 0;
			}

			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}

			.description {
				text-align: justify;
			}

			.icon-with-description {
				display: flex;
				flex-direction: row;
				gap: 8px;
				align-items: center;
				width: fit-content
			}

			.tags {
				display: flex;
				flex-direction: row;
				gap: 8px;
			}

			.tag {
				background-color: rgb(243 244 246);
				padding: 0.5rem 0.75rem 0.5rem 0.75rem;
				border-radius: 4px;
			}

			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
		<script>
			const images = document.querySelectorAll("img");

			images.forEach((image) => {
				image.addEventListener("error", (event) => {
					image.src = "/blog-placeholder-about.jpg";
				})
			});
		</script>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					<img type="image/png" src={thumbnail} width={1020} height={510} aria-label="Image de couverture"/>
				</div>
				<div class="prose">
					<div class="title">
						<h1>{title}</h1>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<hr />
						<div class="description">
							<p>{description}</p>
							<div class="tags">
								{links.map((link) => 
									<a href={link.href} class="icon-with-description tag">
										<ion-icon name={link.icon}></ion-icon>
										{link.title}
									</a>
								)}
								{tags.map((tag) => 
									<div class="icon-with-description tag">
										{tag}
									</div>
								)}
							</div>
						</div>
					</div>
					<span class="icon-with-description">
						<ion-icon name="book"></ion-icon>
						Readme
					</span>
					<hr/>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
		<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
		<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
	</body>
</html>
